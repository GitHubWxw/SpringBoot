server:
  port: 8061
# 数据源
spring:
  application:
    name: boot-quartz
  datasource:
    url: jdbc:mysql://localhost:3306/wxw_security?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource

  # 定时任务配置
  quartz:
    job-store-type: jdbc # 将任务持久化到数据库
    jdbc:
      initialize-schema: never  #不初始化表结构
    wait-for-jobs-to-complete-on-shutdown: true  # 程序结束时会等待quartz的相关内容结束
    overwrite-existing-jobs: true   # quartzSchedule启动时更新job
    properties:
      org:
        quartz:
          # scheduler相关
          scheduler:
            # scheduler的实例名
            instanceName: 定时调度
            instanceId: AUTO
          rmi:
            export: false
            proxy: false
          # 持久化相关
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX  # 持久化配置
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate  #我们仅为数据库制作了特定于数据库的代理
            # 表示数据库中相关表是QRTZ_开头的
            tablePrefix: qrtz_    #数据库表前缀
            useProperties: false  #以指示JDBCJobStore将JobDataMaps中的所有值都作为字符串，因此可以作为名称 - 值对存储而不是在BLOB列中以其序列化形式存储更多复杂的对象。从长远来看，这是更安全的，因为您避免了将非String类序列化为BLOB的类版本问题。
            dataSource: myDs
          # 线程池相关
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            # 线程数
            threadCount: 10
            # 线程优先级
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
          # 数据源
          dataSource:
            myDs:
              driver: com.mysql.jdbc.Driver
              URL: jdbc:mysql://localhost:3306/wxw_security?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
              user: root
              password: 123456


